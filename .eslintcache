[{"/home/elfuhrer/develop/react.js/react-extinguisher-build/src/index.js":"1","/home/elfuhrer/develop/react.js/react-extinguisher-build/src/App.js":"2","/home/elfuhrer/develop/react.js/react-extinguisher-build/src/reportWebVitals.js":"3","/home/elfuhrer/develop/react.js/react-extinguisher-build/src/components/Registro.js":"4","/home/elfuhrer/develop/react.js/react-extinguisher-build/src/components/FormularioRegistro.js":"5","/home/elfuhrer/develop/react.js/react-extinguisher-build/src/components/Inicio.js":"6","/home/elfuhrer/develop/react.js/react-extinguisher-build/src/components/Login.js":"7","/home/elfuhrer/develop/react.js/react-extinguisher-build/src/components/AppBar.js":"8"},{"size":602,"mtime":1611021563124,"results":"9","hashOfConfig":"10"},{"size":1355,"mtime":1611114923583,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610682357196,"results":"12","hashOfConfig":"10"},{"size":3530,"mtime":1611251920830,"results":"13","hashOfConfig":"10"},{"size":11112,"mtime":1611192263215,"results":"14","hashOfConfig":"10"},{"size":4869,"mtime":1611192272411,"results":"15","hashOfConfig":"10"},{"size":3531,"mtime":1611192281651,"results":"16","hashOfConfig":"10"},{"size":1763,"mtime":1611113967410,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"2dux86",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/home/elfuhrer/develop/react.js/react-extinguisher-build/src/index.js",[],["39","40"],"/home/elfuhrer/develop/react.js/react-extinguisher-build/src/App.js",[],"/home/elfuhrer/develop/react.js/react-extinguisher-build/src/reportWebVitals.js",[],"/home/elfuhrer/develop/react.js/react-extinguisher-build/src/components/Registro.js",["41","42","43","44","45","46"],"/home/elfuhrer/develop/react.js/react-extinguisher-build/src/components/FormularioRegistro.js",["47","48","49","50","51","52","53","54","55","56","57","58","59","60","61"],"import React from 'react';\nimport { Grid,Paper,Avatar,TextField} from '@material-ui/core';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport { MakeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport EventIcon from '@material-ui/icons/Event';\nimport FireplaceIcon from '@material-ui/icons/Fireplace';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\n\nconst FormularioRegistro = () => {\n\n\nconst paperStyle={padding :20,height:'80vh',width:900,margin:'20px auto'}\nconst avatarStyle={backgroundColor:'#325ed8'}\nconst btnstyle={margin:'8px 0',align:'center'}\nconst useStyles = makeStyles((theme1) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme1.spacing(1),\n    marginRight: theme1.spacing(1),\n    width: 310,\n  },\n}));\n\n const classes = useStyles();\n\n    const [nombre, setNombre] = React.useState('')\n    const [direccion, setDireccion] = React.useState('')\n    const [telefono, setTelefono] = React.useState('')\n    const [correo, setCorreo] = React.useState('')\n    const [cedula, setCedula] = React.useState('')\n\n    const [marca, setMarca] = React.useState('')\n    const [modelo, setModelo] = React.useState('')\n    const [serial, setSerial] = React.useState('')\n    const [fechaU, setfechaU] = React.useState('')\n    const [fechaS, setfechaS] = React.useState('')\n    const [lista, setLista] = React.useState([])\n\n\n    const guardarDatos = (e) => {\n\n        e.preventDefault()\n\n        if(!nombre.trim()){\n            console.log('esta vacio nombre')\n            return\n        }\n\n        if(!direccion.trim()){\n            console.log('esta vacio direccion')\n            return\n        }\n\n        if(!telefono.trim()){\n            console.log('esta vacio telefono')\n            return\n        }\n\n        if(!correo.trim()){\n            console.log('esta vacio correo')\n            return\n        }\n\n        if(!cedula.trim()){\n            console.log('esta vacio cedula')\n            return\n        }\n\n        if(!marca.trim()){\n            console.log('esta vacio marca')\n            return\n        }\n\n        if(!modelo.trim()){\n            console.log('esta vacio modelo')\n            return\n        }\n\n        if(!serial.trim()){\n            console.log('esta vacio serial')\n            return\n        }\n\n        if(!fechaU.trim()){\n            console.log('esta vacio fechaU')\n            return\n        }\n\n        if(!fechaS.trim()){\n            console.log('esta vacio serial')\n            return\n        }\n\n        // console.log('procesando datos...' + nombre +' '+ direccion+' '+ telefono +' '+ correo +' '+ cedula\n        //                                     + marca +' '+ modelo+' '+ serial +' '+ fechaU+' '+ fechaS )\n\n        setLista([\n            ...lista,\n            {nombraNombre: nombre, nombreDireccion: direccion, nombreTelefono: telefono, nombreCorreo: correo, nombreCedula: cedula,\n            nombreMarca:marca, nombreModelo: modelo, nombreSerial: serial,nombreFechaU: fechaU, nombreFechaS: fechaS  }\n        ])\n\n        e.target.reset()\n        setNombre('')\n        setDireccion('')\n        setTelefono('')\n        setCorreo('')\n        setCedula('')\n        setMarca('')\n        setModelo('')\n        setSerial('')\n        setfechaU('')\n        setfechaS('')\n        fetchData()\n    }\n\n    const fetchData = async () => {\n      let count = 0;\n      let rowsData = {}\n      const localArr = []\n      let historyData = {}\n      const historyArr = []\n      let customerID = ''\n      const responseUser = await fetch(`https://back.prolightpty.com/customers`);\n      const customerData = await responseUser.json();\n      if (customerData.length != 0){\n        customerData.forEach((item) => {\n          if (item.doc === cedula){\n            count += 1\n            customerID = item.id\n            rowsData = item.exting.map(item2 => {\n              historyData = item2.history.map(item3 => {\n                historyArr.push({\n                  id: item3.id,\n                  extinguisher: item3.extinguisher,\n                  customer: item3.customer,\n                  user: item3.user,\n                  last_recharge: item3.last_recharge\n                })\n              })\n              localArr.push({\n                  id: item2.id,\n                  serial: item2.serial,\n                  brand: item2.brand,\n                  model: item2.model,\n                  last_recharge: item2.last_recharge,\n                  next_recharge: item2.next_recharge,\n                  history: historyArr\n              })\n            })\n          }\n        })\n      }\n      if (count === 0){\n        createData()\n        window.location.href = \"./dashboard\"\n      }else{updateData(localArr,historyArr,customerID)}\n    }\n\n    const createData = async () => {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          name: nombre, \n          address: direccion, \n          phone: telefono,\n          doc: cedula,\n          exting: [\n            {\n              serial: serial,\n              brand: marca,\n              model: modelo,\n              last_recharge: fechaU,\n              // next_recharge: fechaU,\n              history: [\n                {\n                  extinguisher: serial,\n                  customer: nombre,\n                  // user: item3.user,\n                  // last_recharge: item3.last_recharge\n                }\n              ]\n            }\n          ],\n        })\n      };\n      const response = await fetch('https://back.prolightpty.com/customers',requestOptions);\n      const data = await response.json();\n      // this.setState({ postId: data.id });\n    }\n\n    const updateData = async (localArr,historyArr,id) => {\n      console.log(localArr, 'localArr')\n      console.log(historyArr, 'historyArr')\n      console.log(id, 'id')\n      historyArr.push({\n        extinguisher: serial,\n        customer: nombre,\n        // user: item3.user,\n        // last_recharge: item3.last_recharge\n      })\n      localArr.push({\n        serial: serial,\n        brand: marca,\n        model: modelo,\n        last_recharge: fechaU,\n        // next_recharge: item2.next_recharge,\n        history: historyArr\n      })\n      const updateOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          name: nombre, \n          address: direccion, \n          phone: telefono,\n          doc: cedula,\n          exting: localArr\n        })\n      };\n      const response = await fetch('https://back.prolightpty.com/customers/id',updateOptions);\n      const data = await response.json();\n      // this.setState({ postId: data.id });\n    }\n\n    return (\n        <div>\n            <h2 align='center'>Formulario De Registro</h2>\n            <form onSubmit={ guardarDatos } >\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6} lg={6}>\n                    <Grid align='center'>\n                      <Avatar style={avatarStyle}><PermIdentityIcon/></Avatar>\n                      <h2>Datos del Cliente</h2>\n\n                      <TextField label='Nombre' placeholder='Ingresar Nombre'\n                      onChange={ e => setNombre(e.target.value) }\n                      />\n                      <ListItemText />\n\n                      <TextField label='Direccion' placeholder='Ingresar Direccion'\n                      onChange={ e => setDireccion(e.target.value) }\n                      />\n                      <ListItemText />\n                      <TextField label='Telefono' placeholder='Ingresar Telefono'\n                      onChange={ e => setTelefono(e.target.value) }\n                      />\n                      <ListItemText />\n                      <TextField label='Correo' placeholder='Ingresar Correo'\n                      onChange={ e => setCorreo(e.target.value) }\n                      />\n                      <ListItemText />\n                      <TextField label='Cedula Cliente' placeholder='Ingresar CC'\n                      onChange={ e => setCedula(e.target.value) }\n                      />\n                      <ListItemText />\n                    </Grid>\n\n                </Grid>\n\n\n                  <Grid item xs={12} md={6} lg={6} >\n                          <Grid align='center'>\n                            <Avatar style={avatarStyle}><FireplaceIcon/></Avatar>\n                              <h2>Datos del Extintor</h2>\n\n                                  <TextField label='Marca' placeholder='Ingresar Marca'\n                                  onChange={ e => setMarca(e.target.value) }\n                                  />\n                                  <ListItemText />\n\n                                  <TextField label='Modelo' placeholder='Ingresar Modelo'\n                                  onChange={ e => setModelo(e.target.value) }\n                                  />\n                                  <ListItemText />\n                                  <TextField label='Serial del Extintor' placeholder='Ingresar Serial'\n                                  onChange={ e => setSerial(e.target.value) }\n                                  />\n                                  <ListItemText />\n                                  <TextField\n                                           id=\"date\" onChange={ e => setfechaU(e.target.value) }\n                                           label=\"Fecha Ultima Recarga\"\n                                           type=\"date\"\n                                           className={classes.textField}\n                                           InputLabelProps={{\n                                             shrink: true,\n\n                                           }}\n                                         />\n                                  <ListItemText />\n\n                                  <TextField\n                                           id=\"date\" onChange={ e => setfechaS(e.target.value) }\n                                           label=\"Fecha Siguiente Recarga\"\n                                           type=\"date\"\n                                           className={classes.textField}\n                                           InputLabelProps={{\n                                          shrink: true,\n                                           }}\n                                         />\n\n                                  <ListItemText />\n                              </Grid>\n\n                    </Grid>\n\n            </Grid>\n\n              <Grid align='center'>\n                  <Button type='submit'color='primary' variant='contained'  style={btnstyle} fullwidth>Registrar</Button>\n              </Grid>\n            </form>\n        </div>\n\n    )\n}\n\nexport default FormularioRegistro\n","/home/elfuhrer/develop/react.js/react-extinguisher-build/src/components/Inicio.js",["62","63","64"],"import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from \"@material-ui/core\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ErrorRoundedIcon from '@material-ui/icons/ErrorRounded';\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\nimport { Typography } from \"@material-ui/core\";\nimport { orange, red } from '@material-ui/core/colors';\n\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\";\n\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    mainTitle: {\n      marginBottom: 20, \n    },\n    inconSize: {\n      fontSize: 16, \n    }\n  });\n\n  // function createData(customer, brand, model, lastDate, nextDate) {\n  //   return { customer, brand, model, lastDate, nextDate };\n  // }\n  \n  // const row = [\n  //   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  //   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  //   createData('Eclair', 262, 16.0, 24, 6.0),\n  //   createData('Cupcake', 305, 3.7, 67, 4.3),\n  //   createData('Gingerbread', 356, 16.0, 49, 3.9),\n  // ];\n\nconst Inicio = () => {\n  const classes = useStyles();\n  const [rows, setCustomer] = React.useState([])\n\n  React.useEffect(() => {\n    fetchData()\n}, [])\n\nconst prueba = (nextDate) => {\n  let msDiff = new Date(nextDate).getTime() - new Date().getTime();    //Future date - current date\n  let daysTill = Math.floor(msDiff / (1000 * 60 * 60 * 24));\n  return daysTill\n}\n\nconst fetchData = async () => {\n\n    try {\n        const data = await fetch('https://back.prolightpty.com/customers')\n        const customerData = await data.json()\n        let rowsData = {}\n        const localArr = []\n        customerData.forEach((item) => {\n            rowsData = item.exting.map(item2 => {\n              const dayStill = prueba(item2.next_recharge)\n              localArr.push({\n                customer: item.name,\n                brand: item2.brand,\n                model: item2.model,\n                lastDate: item2.last_recharge,\n                nextDate: item2.next_recharge,\n                warningIcon: dayStill,\n              })\n            return true\n          })\n        })\n        setCustomer(localArr)\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n  return (\n    <Fragment>\n      <TableContainer component={Paper}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={4} lg={6}>\n            <Typography className={classes.mainTitle} variant=\"h4\">Extintores</Typography>\n          </Grid>\n          <Grid item xs={12} md={4} lg={6} className=\"inconSize\">\n            <ErrorRoundedIcon style={{ color: orange.A200, fontSize: 20 }}/> Alerta recargar pronto <br/>\n            <WarningRoundedIcon style={{ color: red[600], fontSize: 20 }}/> Fecha de recarga vencida\n          </Grid>\n        </Grid>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Propietario</TableCell>\n              <TableCell align=\"center\">Marca</TableCell>\n              <TableCell align=\"center\">Modelo</TableCell>\n              <TableCell align=\"center\">Última Recarga</TableCell>\n              <TableCell align=\"center\">Próxima Recarga</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.customer}&nbsp;\n                  {\n                  row.warningIcon > '0' && row.warningIcon <= '3' ? <ErrorRoundedIcon style={{ color: orange.A200 }}/>\n                   : ''\n                  }\n                  {\n                  row.warningIcon < '0' ? <WarningRoundedIcon style={{ color: red[600] }}/>\n                   : ''\n                  }\n                </TableCell>\n                <TableCell align=\"center\">{row.brand}</TableCell>\n                <TableCell align=\"center\">{row.model}</TableCell>\n                <TableCell align=\"center\">{row.lastDate}</TableCell>\n                <TableCell align=\"center\">{row.nextDate}</TableCell>\n                <TableCell align=\"center\">\n                  <Link to=\"/users\">\n                    <button className=\"btn btn-success btn-sm float-right mr-2\">\n                      Recargar\n                    </button>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n\nexport default Inicio;\n\n","/home/elfuhrer/develop/react.js/react-extinguisher-build/src/components/Login.js",["65","66","67","68","69"],"import React from 'react'\nimport { Grid,Paper,Avatar,TextField,Typography } from '@material-ui/core';\nimport LockIcon from '@material-ui/icons/Lock';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Button } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\";\n\n\nconst Login=()=>{\n\n  const [correo, setCorreo] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const [lista, setLista] = React.useState([])\n\n  const guardarDatos = (e) => {\n\n    e.preventDefault()\n\n    if(!correo.trim()){\n        console.log('esta vacio correo')\n        return\n    }\n\n    if(!password.trim()){\n        console.log('esta vacio password')\n        return\n    }\n\n    setLista([\n        ...lista,\n        {nombraCorreo: correo, nombrePassword: password}\n    ])\n\n    e.target.reset()\n\n    setCorreo('')\n    setPassword('')\n    fetchData()\n  }\n\n  const fetchData = async () => {\n    let count = 0;\n    let count2 = 0;\n    let BreakException= {};\n    const requestUser = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const responseUser = await fetch('https://back.prolightpty.com/users');\n    const userData = await responseUser.json();\n    if (userData.length != 0){\n      userData.forEach((item) => {\n        if (item.login === correo){\n          count += 1\n          if (item.password === password){\n            count2 += 1\n            console.log(item)\n            window.location.href = \"./dashboard\"\n          }\n        }\n      })\n    }\n    if (count === 0){\n      alert('Usted no se encuentra registrado, por favor continue al formulario de registro.')\n    }else if(count2 === 0){\n      alert('Usuario y/o contraseña incorrectos.')\n    }\n  }\n\n  const paperStyle={padding :20,height:'70vh',width:270,margin:'20px auto'}\n  const avatarStyle={backgroundColor:'#325ed8'}\n  const btnstyle={margin:'8px 0'}\n\n    return (\n      <Grid >\n          <Paper elevation={10} style={paperStyle}>\n                <Grid align='center'>\n                <Avatar style={avatarStyle}><LockIcon/></Avatar>\n                  <h3>Ingresa</h3>\n\n                  <form onSubmit={ guardarDatos } >\n                  <TextField label='Correo Electronico' placeholder='Ingresar Correo' onChange={ e => setCorreo(e.target.value) } fullwidth required type=\"email\"/>\n                  <TextField label='Password' placeholder='Ingresar Clave' type='Password' onChange={ e => setPassword(e.target.value) }fullwidth required/>\n\n\n                    <FormControlLabel\n                       control={\n                         <Checkbox\n                          name=\"checkedB\"\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Recordar usuario\"\n                    />\n                    <Button type='submit'color='primary' variant='contained' style={btnstyle} fullwidth>Iniciar Sesion</Button>\n\n                    </form>\n\n                    {/* <Typography>\n                    <Link href=\"#\">\n                      RECUPERAR CLAVE\n                    </Link>\n                    </Typography> */}\n\n                    <Typography>\n                    <Link to=\"signup\">\n                      REGÍSTRATE\n                    </Link>\n                    </Typography>\n\n\n                </Grid>\n            </Paper>\n        </Grid>\n\n    )\n}\n\nexport default Login\n","/home/elfuhrer/develop/react.js/react-extinguisher-build/src/components/AppBar.js",["70","71","72"],"import React from \"react\";\n// import logo from '../img/app-logo.jpg';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, Grid } from \"@material-ui/core\";\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport { grey } from '@material-ui/core/colors';\n\nimport {\n  BrowserRouter as Router,\n  Link,\n  NavLink\n} from \"react-router-dom\";\n\nconst useStyle = makeStyles((theme) => ({\n  offset: {\n    ...theme.mixins.toolbar, // min-height: 56px;\n  },\n  text: {\n    color: \"white\",\n    \"&:hover\":{\n      color: grey[900],\n      textDecoration: \"none\",\n    }\n  },\n  rightSideNavbar: {\n    float: \"right\",\n  }\n}));\n\nconst Navbar = () => {\n  const classes = useStyle();\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" color=\"primary\">\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6} lg={6} className={classes.fondo}>\n            <Toolbar>\n              <div className=\"btn-group\">\n                <Link to=\"/dashboard\" className={classes.text}><HomeRoundedIcon/></Link>&nbsp;&nbsp;\n              </div>\n            </Toolbar>\n          </Grid>\n          <Grid item xs={12} md={6} lg={6} className={classes.fondo}>\n            <Toolbar className=\"btn-group\" className={classes.rightSideNavbar}>\n              <div className=\"btn-group\">\n                <Link to=\"/extintor\" className={classes.text}>Registrar Extintor</Link>&nbsp;&nbsp;&nbsp;\n                <NavLink to=\"/\" className={classes.text} activeClassName=\"active\">Salir</NavLink>&nbsp;&nbsp;\n              </div>\n            </Toolbar>\n          </Grid>\n        </Grid>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default Navbar;",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":16},{"ruleId":"77","severity":1,"message":"81","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":18},{"ruleId":"77","severity":1,"message":"82","line":16,"column":9,"nodeType":"79","messageId":"80","endLine":16,"endColumn":16},{"ruleId":"77","severity":1,"message":"83","line":54,"column":11,"nodeType":"79","messageId":"80","endLine":54,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":60,"column":25,"nodeType":"86","messageId":"87","endLine":60,"endColumn":27},{"ruleId":"77","severity":1,"message":"88","line":87,"column":9,"nodeType":"79","messageId":"80","endLine":87,"endColumn":13},{"ruleId":"77","severity":1,"message":"89","line":2,"column":15,"nodeType":"79","messageId":"80","endLine":2,"endColumn":20},{"ruleId":"77","severity":1,"message":"90","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":20},{"ruleId":"77","severity":1,"message":"91","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":12},{"ruleId":"77","severity":1,"message":"92","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":16},{"ruleId":"77","severity":1,"message":"93","line":8,"column":8,"nodeType":"79","messageId":"80","endLine":8,"endColumn":15},{"ruleId":"77","severity":1,"message":"94","line":9,"column":8,"nodeType":"79","messageId":"80","endLine":9,"endColumn":17},{"ruleId":"77","severity":1,"message":"81","line":11,"column":8,"nodeType":"79","messageId":"80","endLine":11,"endColumn":18},{"ruleId":"77","severity":1,"message":"95","line":18,"column":7,"nodeType":"79","messageId":"80","endLine":18,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":135,"column":31,"nodeType":"86","messageId":"87","endLine":135,"endColumn":33},{"ruleId":"77","severity":1,"message":"96","line":140,"column":13,"nodeType":"79","messageId":"80","endLine":140,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":140,"column":46,"nodeType":"99","messageId":"100","endLine":140,"endColumn":48},{"ruleId":"77","severity":1,"message":"101","line":141,"column":15,"nodeType":"79","messageId":"80","endLine":141,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":141,"column":53,"nodeType":"99","messageId":"100","endLine":141,"endColumn":55},{"ruleId":"77","severity":1,"message":"88","line":198,"column":13,"nodeType":"79","messageId":"80","endLine":198,"endColumn":17},{"ruleId":"77","severity":1,"message":"88","line":232,"column":13,"nodeType":"79","messageId":"80","endLine":232,"endColumn":17},{"ruleId":"77","severity":1,"message":"102","line":17,"column":20,"nodeType":"79","messageId":"80","endLine":17,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":52,"column":4,"nodeType":"105","endLine":52,"endColumn":6,"suggestions":"106"},{"ruleId":"77","severity":1,"message":"96","line":68,"column":13,"nodeType":"79","messageId":"80","endLine":68,"endColumn":21},{"ruleId":"77","severity":1,"message":"81","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":18},{"ruleId":"77","severity":1,"message":"102","line":10,"column":20,"nodeType":"79","messageId":"80","endLine":10,"endColumn":26},{"ruleId":"77","severity":1,"message":"107","line":50,"column":9,"nodeType":"79","messageId":"80","endLine":50,"endColumn":23},{"ruleId":"77","severity":1,"message":"83","line":51,"column":11,"nodeType":"79","messageId":"80","endLine":51,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":57,"column":25,"nodeType":"86","messageId":"87","endLine":57,"endColumn":27},{"ruleId":"77","severity":1,"message":"108","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":18},{"ruleId":"77","severity":1,"message":"102","line":11,"column":20,"nodeType":"79","messageId":"80","endLine":11,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":47,"column":44,"nodeType":"111","endLine":47,"endColumn":79},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'history' is assigned a value but never used.","'requestUser' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'Paper' is defined but never used.","'MakeStyles' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Divider' is defined but never used.","'EventIcon' is defined but never used.","'paperStyle' is assigned a value but never used.","'rowsData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'historyData' is assigned a value but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'BreakException' is assigned a value but never used.","'Typography' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [fetchData]",{"range":"117","text":"118"},[1572,1574],"[fetchData]"]